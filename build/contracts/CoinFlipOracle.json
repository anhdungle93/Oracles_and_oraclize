{
  "contractName": "CoinFlipOracle",
  "abi": [
    {
      "inputs": [],
      "name": "provableID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flipCoin",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_provableID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_provableID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flipCoin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provableID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/anhdungle/learning/Oracles_from_Provable/contracts/CoinFlipOracle.sol\":\"CoinFlipOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/anhdungle/learning/Oracles_from_Provable/contracts/CoinFlipOracle.sol\":{\"keccak256\":\"0xb1b27a1d9c7ed648ed16f1c6e9c8d116551c11dc792fa2285dee92887ad2a2f0\",\"urls\":[\"bzz-raw://6dfdd02de8125bb6bb7d363c9e3131b88c3b1db9ab9b3202aed5675095ddbd2b\",\"dweb:/ipfs/Qmemhw9WrE4HnV3rUDgQtgDLRHzUXaYicwKdJJW9jnbUvA\"]},\"/Users/anhdungle/learning/Oracles_from_Provable/contracts/provableAPI_0.6.sol\":{\"keccak256\":\"0x605551a88268d4523a12f9735b579f4899b3991394b00ba40d60357400c1d416\",\"urls\":[\"bzz-raw://574dabfb09c142c0d10e50462c41080b12435ec64bb4121e44a6cb120c759644\",\"dweb:/ipfs/QmRHdxeYYD27B72WTVMjHQPv1LYZc1YejfKkvQWermR36a\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611422806100206000396000f3fe60806040526004361061004a5760003560e01c806327dc297e1461004f57806338bbfa5014610121578063653721471461028a57806373d527811461031a578063799ae22314610345575b600080fd5b34801561005b57600080fd5b5061011f6004803603604081101561007257600080fd5b81019080803590602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061034f565b005b34801561012d57600080fd5b506102886004803603606081101561014457600080fd5b81019080803590602001909291908035906020019064010000000081111561016b57600080fd5b82018360208201111561017d57600080fd5b8035906020019184600183028401116401000000008311171561019f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020257600080fd5b82018360208201111561021457600080fd5b8035906020019184600183028401116401000000008311171561023657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610412565b005b34801561029657600080fd5b5061029f610435565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102df5780820151818401526020810190506102c4565b50505050905090810190601f16801561030c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032657600080fd5b5061032f6104d3565b6040518082815260200191505060405180910390f35b61034d6104d9565b005b610357610555565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f796f7520617265206e6f7420616e206f7261636c65000000000000000000000081525060200191505060405180910390fd5b806005908051906020019061040d929190611347565b505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104cb5780601f106104a0576101008083540402835291602001916104cb565b820191906000526020600020905b8154815290600101906020018083116104ae57829003601f168201915b505050505081565b60065481565b61054d6040518060400160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040518060400160405280600b81526020017f666c6970206120636f696e000000000000000000000000000000000000000000815250610874565b600681905550565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806105dd575060006105db600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610dba565b145b156105ee576105ec6000610dc5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b505050506040513d602081101561068257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107cb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075057600080fd5b505af1158015610764573d6000803e3d6000fd5b505050506040513d602081101561077a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506040513d602081101561085e57600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806108fc575060006108fa600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610dba565b145b1561090d5761090b6000610dc5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561097757600080fd5b505af115801561098b573d6000803e3d6000fd5b505050506040513d60208110156109a157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aea57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a6f57600080fd5b505af1158015610a83573d6000803e3d6000fd5b505050506040513d6020811015610a9957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b79578082015181840152602081019050610b5e565b50505050905090810190601f168015610ba65780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610bc557600080fd5b505af1158015610bd9573d6000803e3d6000fd5b505050506040513d6020811015610bef57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610c25576000801b915050610db4565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610cc0578082015181840152602081019050610ca5565b50505050905090810190601f168015610ced5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610d26578082015181840152602081019050610d0b565b50505050905090810190601f168015610d535780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b50505050506040513d6020811015610d9f57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610dcf610dd6565b9050919050565b600080610df6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610dba565b1115610e9857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e8f6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061132d565b6001905061132a565b6000610eb773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610dba565b1115610f595773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f506040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061132d565b6001905061132a565b6000610f7873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610dba565b111561101a5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110116040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061132d565b6001905061132a565b600061103973146500cfd35b22e4a392fe0adc06de1a1368ed48610dba565b11156110db5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110d26040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061132d565b6001905061132a565b60006110fa73a2998efd205fb9d4b4963afb70778d6354ad3a41610dba565b111561119c5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111936040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061132d565b6001905061132a565b60006111bb736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610dba565b111561121f57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061132a565b600061123e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610dba565b11156112a2577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061132a565b60006112c17351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610dba565b1115611325577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061132a565b600090505b90565b8060029080519060200190611343929190611347565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061138857805160ff19168380011785556113b6565b828001600101855582156113b6579182015b828111156113b557825182559160200191906001019061139a565b5b5090506113c391906113c7565b5090565b6113e991905b808211156113e55760008160009055506001016113cd565b5090565b9056fea264697066735822122066f812dbc196777772f6b19d5a29eed5b99797e17b0caf15c4dbe26807f8791264736f6c63430006060033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806327dc297e1461004f57806338bbfa5014610121578063653721471461028a57806373d527811461031a578063799ae22314610345575b600080fd5b34801561005b57600080fd5b5061011f6004803603604081101561007257600080fd5b81019080803590602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061034f565b005b34801561012d57600080fd5b506102886004803603606081101561014457600080fd5b81019080803590602001909291908035906020019064010000000081111561016b57600080fd5b82018360208201111561017d57600080fd5b8035906020019184600183028401116401000000008311171561019f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020257600080fd5b82018360208201111561021457600080fd5b8035906020019184600183028401116401000000008311171561023657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610412565b005b34801561029657600080fd5b5061029f610435565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102df5780820151818401526020810190506102c4565b50505050905090810190601f16801561030c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032657600080fd5b5061032f6104d3565b6040518082815260200191505060405180910390f35b61034d6104d9565b005b610357610555565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f796f7520617265206e6f7420616e206f7261636c65000000000000000000000081525060200191505060405180910390fd5b806005908051906020019061040d929190611347565b505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104cb5780601f106104a0576101008083540402835291602001916104cb565b820191906000526020600020905b8154815290600101906020018083116104ae57829003601f168201915b505050505081565b60065481565b61054d6040518060400160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040518060400160405280600b81526020017f666c6970206120636f696e000000000000000000000000000000000000000000815250610874565b600681905550565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806105dd575060006105db600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610dba565b145b156105ee576105ec6000610dc5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b505050506040513d602081101561068257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107cb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075057600080fd5b505af1158015610764573d6000803e3d6000fd5b505050506040513d602081101561077a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506040513d602081101561085e57600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806108fc575060006108fa600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610dba565b145b1561090d5761090b6000610dc5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561097757600080fd5b505af115801561098b573d6000803e3d6000fd5b505050506040513d60208110156109a157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aea57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a6f57600080fd5b505af1158015610a83573d6000803e3d6000fd5b505050506040513d6020811015610a9957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b79578082015181840152602081019050610b5e565b50505050905090810190601f168015610ba65780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610bc557600080fd5b505af1158015610bd9573d6000803e3d6000fd5b505050506040513d6020811015610bef57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610c25576000801b915050610db4565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610cc0578082015181840152602081019050610ca5565b50505050905090810190601f168015610ced5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610d26578082015181840152602081019050610d0b565b50505050905090810190601f168015610d535780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b50505050506040513d6020811015610d9f57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610dcf610dd6565b9050919050565b600080610df6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610dba565b1115610e9857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e8f6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061132d565b6001905061132a565b6000610eb773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610dba565b1115610f595773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f506040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061132d565b6001905061132a565b6000610f7873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610dba565b111561101a5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110116040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061132d565b6001905061132a565b600061103973146500cfd35b22e4a392fe0adc06de1a1368ed48610dba565b11156110db5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110d26040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061132d565b6001905061132a565b60006110fa73a2998efd205fb9d4b4963afb70778d6354ad3a41610dba565b111561119c5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111936040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061132d565b6001905061132a565b60006111bb736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610dba565b111561121f57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061132a565b600061123e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610dba565b11156112a2577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061132a565b60006112c17351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610dba565b1115611325577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061132a565b600090505b90565b8060029080519060200190611343929190611347565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061138857805160ff19168380011785556113b6565b828001600101855582156113b6579182015b828111156113b557825182559160200191906001019061139a565b5b5090506113c391906113c7565b5090565b6113e991905b808211156113e55760008160009055506001016113cd565b5090565b9056fea264697066735822122066f812dbc196777772f6b19d5a29eed5b99797e17b0caf15c4dbe26807f8791264736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "66:393:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;66:393:0;;;;;;;",
  "deployedSourceMap": "66:393:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;276:181:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;276:181:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;276:181:0;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;276:181:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;276:181:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;276:181:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;276:181:0;;;;;;;;;;;;;;;:::i;:::-;;15522:186:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;15522:186:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;15522:186:1;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;15522:186:1;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;15522:186:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15522:186:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15522:186:1;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;15522:186:1;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;15522:186:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15522:186:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15522:186:1;;;;;;;;;;;;;;;:::i;:::-;;114:20:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;114:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;114:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;138:25;;5:9:-1;2:2;;;27:1;24;17:12;2:2;138:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;168:104;;;:::i;:::-;;276:181;384:20;:18;:20::i;:::-;370:34;;:10;:34;;;362:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:7;436:6;:16;;;;;;;;;;;;:::i;:::-;;276:181;;:::o;15522:186:1:-;15699:1;15691:10;;15654:22;:34;15685:1;15677:10;;15654:34;;;;;;;;;;;:47;;;;15522:186;;;:::o;114:20:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;138:25::-;;;;:::o;168:104::-;222:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:45::i;:::-;209:10;:58;;;;168:104::o;37278:130:1:-;37338:24;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;:25::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;:35::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12065:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12065:16:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12065:16:1;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12118:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12118:16:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12118:16:1;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;37381:8:::1;::::0;::::1;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;37381:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;37381:20:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;37381:20:1;;;;;;;;;;;;;;;;37374:27;;37278:130:::0;:::o;16065:354::-;16166:11;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;:25::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;:35::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12065:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12065:16:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12065:16:1;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12118:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12118:16:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12118:16:1;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;16189:10:::1;16202:8:::0;::::1;;;;;;;;;;:17;;;16220:11;16202:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16202:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;16202:30:1;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;16202:30:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;16202:30:1;;;;;;;;;;;;;;;;16189:43;;16278:6;16264:11;:20;16254:7;:30;16246:5;:38;16242:104;;;16307:1;16300:8:::0;::::1;;;;;;16242:104;16362:8;::::0;::::1;;;;;;;;;:14;;;16384:5;16391:1;16394:11;16407:4;16362:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16362:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16362:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;16362:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;16362:50:1;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;16362:50:1;;;;;;;;;;;;;;;;16355:57;;;12155:1;16065:354:::0;;;;:::o;37414:147::-;37473:10;37539:5;37527:18;37518:27;;37504:51;;;:::o;12638:205::-;12703:16;12815:21;:19;:21::i;:::-;12808:28;;12638:205;;;:::o;13117:2031::-;13166:16;13256:1;13198:55;13210:42;13198:11;:55::i;:::-;:59;13194:246;;;13309:42;13283:3;;:69;;;;;;;;;;;;;;;;;;13366:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13425:4;13418:11;;;;13194:246;13511:1;13453:55;13465:42;13453:11;:55::i;:::-;:59;13449:255;;;13572:42;13546:3;;:69;;;;;;;;;;;;;;;;;;13629:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13689:4;13682:11;;;;13449:255;13775:1;13717:55;13729:42;13717:11;:55::i;:::-;:59;13713:250;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13891:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13948:4;13941:11;;;;13713:250;14034:1;13976:55;13988:42;13976:11;:55::i;:::-;:59;13972:254;;;14095:42;14069:3;;:69;;;;;;;;;;;;;;;;;;14152:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14211:4;14204:11;;;;13972:254;14297:1;14239:55;14251:42;14239:11;:55::i;:::-;:59;14235:252;;;14357:42;14331:3;;:69;;;;;;;;;;;;;;;;;;14414:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14472:4;14465:11;;;;14235:252;14558:1;14500:55;14512:42;14500:11;:55::i;:::-;:59;14496:202;;;14619:42;14593:3;;:69;;;;;;;;;;;;;;;;;;14683:4;14676:11;;;;14496:202;14769:1;14711:55;14723:42;14711:11;:55::i;:::-;:59;14707:201;;;14829:42;14803:3;;:69;;;;;;;;;;;;;;;;;;14893:4;14886:11;;;;14707:201;14979:1;14921:55;14933:42;14921:11;:55::i;:::-;:59;14917:203;;;15041:42;15015:3;;:69;;;;;;;;;;;;;;;;;;15105:4;15098:11;;;;14917:203;15136:5;15129:12;;13117:2031;;:::o;12849:125::-;12954:13;12930:21;:37;;;;;;;;;;;;:::i;:::-;;12849:125;:::o;66:393:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity > 0.6.1 < 0.7.0;\n\nimport \"./provableAPI_0.6.sol\";\ncontract CoinFlipOracle is usingProvable {\n  \n  string public result;\n  bytes32 public provableID;\n\n  function flipCoin() public payable {\n    provableID = provable_query(\"WolframAlpha\", \"flip a coin\");\n  }\n\n  function __callback(bytes32 _provableID, string memory _result) override public {\n    require(msg.sender == provable_cbAddress(), \"you are not an oracle\");\n    result = _result;\n  }\n}",
  "sourcePath": "/Users/anhdungle/learning/Oracles_from_Provable/contracts/CoinFlipOracle.sol",
  "ast": {
    "absolutePath": "/Users/anhdungle/learning/Oracles_from_Provable/contracts/CoinFlipOracle.sol",
    "exportedSymbols": {
      "CoinFlipOracle": [
        42
      ]
    },
    "id": 43,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".1",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "absolutePath": "/Users/anhdungle/learning/Oracles_from_Provable/contracts/provableAPI_0.6.sol",
        "file": "./provableAPI_0.6.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 6458,
        "src": "34:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6457,
              "src": "93:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6457",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "93:13:0"
          }
        ],
        "contractDependencies": [
          6457
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42,
          6457
        ],
        "name": "CoinFlipOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 6,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "114:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "114:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73d52781",
            "id": 8,
            "mutability": "mutable",
            "name": "provableID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "138:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "138:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "203:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "provableID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "209:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "576f6c6672616d416c706861",
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "237:14:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                            "typeString": "literal_string \"WolframAlpha\""
                          },
                          "value": "WolframAlpha"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "666c6970206120636f696e",
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "253:13:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_499425fbffbaecb84ec21988f7242b180347a7315af95a188b11e7769958dd01",
                            "typeString": "literal_string \"flip a coin\""
                          },
                          "value": "flip a coin"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                            "typeString": "literal_string \"WolframAlpha\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_499425fbffbaecb84ec21988f7242b180347a7315af95a188b11e7769958dd01",
                            "typeString": "literal_string \"flip a coin\""
                          }
                        ],
                        "id": 12,
                        "name": "provable_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1190,
                          1232,
                          1278,
                          1322,
                          1365,
                          1410,
                          1459,
                          1506,
                          1553,
                          1602,
                          1655,
                          1706,
                          1744,
                          1785,
                          1829,
                          1870,
                          1916,
                          1965,
                          2017,
                          2066,
                          2120,
                          2177,
                          2237,
                          2294,
                          2356,
                          2421,
                          2489,
                          2554,
                          2624,
                          2697,
                          2773,
                          2846,
                          2893,
                          2942,
                          2995,
                          3046,
                          3084,
                          3125,
                          3169,
                          3210,
                          3256,
                          3305,
                          3357,
                          3406,
                          3460,
                          3517,
                          3577,
                          3634,
                          3696,
                          3761,
                          3829,
                          3894,
                          3964,
                          4037,
                          4113,
                          4186
                        ],
                        "referencedDeclaration": 1190,
                        "src": "222:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "222:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "209:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "209:58:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "799ae223",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flipCoin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "185:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:0"
            },
            "scope": 42,
            "src": "168:104:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1089
            ],
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "356:101:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "370:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "370:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4211,
                            "src": "384:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "384:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "370:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f7520617265206e6f7420616e206f7261636c65",
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "406:23:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0044331003ae20177685585987c042c3c94637ea65de9c6290f3c431654b8a5",
                          "typeString": "literal_string \"you are not an oracle\""
                        },
                        "value": "you are not an oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0044331003ae20177685585987c042c3c94637ea65de9c6290f3c431654b8a5",
                          "typeString": "literal_string \"you are not an oracle\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "362:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "362:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "436:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "445:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "436:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "436:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "340:8:0"
            },
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_provableID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "296:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "317:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "295:44:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:0"
            },
            "scope": 42,
            "src": "276:181:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 43,
        "src": "66:393:0"
      }
    ],
    "src": "0:459:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/anhdungle/learning/Oracles_from_Provable/contracts/CoinFlipOracle.sol",
    "exportedSymbols": {
      "CoinFlipOracle": [
        42
      ]
    },
    "id": 43,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".1",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "absolutePath": "/Users/anhdungle/learning/Oracles_from_Provable/contracts/provableAPI_0.6.sol",
        "file": "./provableAPI_0.6.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 6458,
        "src": "34:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6457,
              "src": "93:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6457",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "93:13:0"
          }
        ],
        "contractDependencies": [
          6457
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42,
          6457
        ],
        "name": "CoinFlipOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 6,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "114:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "114:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73d52781",
            "id": 8,
            "mutability": "mutable",
            "name": "provableID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "138:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "138:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "203:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "provableID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "209:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "576f6c6672616d416c706861",
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "237:14:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                            "typeString": "literal_string \"WolframAlpha\""
                          },
                          "value": "WolframAlpha"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "666c6970206120636f696e",
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "253:13:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_499425fbffbaecb84ec21988f7242b180347a7315af95a188b11e7769958dd01",
                            "typeString": "literal_string \"flip a coin\""
                          },
                          "value": "flip a coin"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                            "typeString": "literal_string \"WolframAlpha\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_499425fbffbaecb84ec21988f7242b180347a7315af95a188b11e7769958dd01",
                            "typeString": "literal_string \"flip a coin\""
                          }
                        ],
                        "id": 12,
                        "name": "provable_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1190,
                          1232,
                          1278,
                          1322,
                          1365,
                          1410,
                          1459,
                          1506,
                          1553,
                          1602,
                          1655,
                          1706,
                          1744,
                          1785,
                          1829,
                          1870,
                          1916,
                          1965,
                          2017,
                          2066,
                          2120,
                          2177,
                          2237,
                          2294,
                          2356,
                          2421,
                          2489,
                          2554,
                          2624,
                          2697,
                          2773,
                          2846,
                          2893,
                          2942,
                          2995,
                          3046,
                          3084,
                          3125,
                          3169,
                          3210,
                          3256,
                          3305,
                          3357,
                          3406,
                          3460,
                          3517,
                          3577,
                          3634,
                          3696,
                          3761,
                          3829,
                          3894,
                          3964,
                          4037,
                          4113,
                          4186
                        ],
                        "referencedDeclaration": 1190,
                        "src": "222:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "222:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "209:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "209:58:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "799ae223",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flipCoin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "185:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:0"
            },
            "scope": 42,
            "src": "168:104:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1089
            ],
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "356:101:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "370:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "370:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4211,
                            "src": "384:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "384:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "370:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f7520617265206e6f7420616e206f7261636c65",
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "406:23:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0044331003ae20177685585987c042c3c94637ea65de9c6290f3c431654b8a5",
                          "typeString": "literal_string \"you are not an oracle\""
                        },
                        "value": "you are not an oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0044331003ae20177685585987c042c3c94637ea65de9c6290f3c431654b8a5",
                          "typeString": "literal_string \"you are not an oracle\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "362:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "362:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "436:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "445:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "436:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "436:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "340:8:0"
            },
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_provableID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "296:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "317:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "295:44:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:0"
            },
            "scope": 42,
            "src": "276:181:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 43,
        "src": "66:393:0"
      }
    ],
    "src": "0:459:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-22T09:58:36.500Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}